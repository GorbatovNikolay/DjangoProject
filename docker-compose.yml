version: '3'

services:
  postgres:
    image: postgres:latest
    restart: always
    container_name: postgres
    env_file:
      - local.env
    ports:
      - "8094:5432"
    volumes:
      - ./postgres/db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}'" ]
      interval: 2s
      timeout: 2s
      retries: 2

  rabbit:
    hostname: rabbit
    image: rabbitmq:management
    env_file:
      - local.env
    ports:
      - "15672:15672"

  celery_worker:
    image: celery_worker
    build:
      context: .
      dockerfile: Dockerfile.celery
    links:
      - rabbit
    volumes:
      - ./src/:/src
    env_file:
      - local.env
    depends_on:
      - rabbit

  minio:
    image: minio/minio
    hostname: "minio"
    volumes:
      - ./minio:/minio_files
    env_file:
      - local.env
    command: 'minio server /minio_files --console-address ":9001"'
    ports:
      - '9000:9000'
      - '9001:9001'

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    env_file:
      - local.env
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb --quiet myminio/photos;
      /usr/bin/mc policy set none myminio/photos;
      "

  django:
    image: python:latest
    restart: always
    container_name: django
    build: .
    volumes:
      - ./src/:/src
    ports:
      - "8000:8000"
    env_file:
      - local.env
    depends_on:
      - postgres
      - celery_worker
    command: sh -c "
      python manage.py migrate &&
      python manage.py create_superuser_from_env &&
      python manage.py runserver 0.0.0.0:8000"
